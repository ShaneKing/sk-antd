'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

require('antd/lib/input/style');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _skJs = require('sk-js');

var _Const = require('../../Const');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var OriginInput = function OriginInput() {
  _classCallCheck(this, OriginInput);
};

OriginInput.defaultProps = _skJs.SK.assign({}, {
  disabled: false,
  size: _Const.SIZE.Default,
  type: _Const.INPUT_TYPE.Text
}, _input2.default.defaultProps, {});
OriginInput.propTypes = _skJs.SK.assign({}, {
  //https://ant.design/components/input-cn/#Input
  addonAfter: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
  addonBefore: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
  defaultValue: _propTypes2.default.string,
  disabled: _propTypes2.default.bool,
  id: _propTypes2.default.string,
  prefix: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
  size: _propTypes2.default.string,
  suffix: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
  type: _propTypes2.default.string,
  value: _propTypes2.default.string,
  onPressEnter: _propTypes2.default.func
}, _input2.default.propTypes, {});
exports.default = OriginInput;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFudGQvaW5wdXQvT3JpZ2luSW5wdXQuanMiXSwibmFtZXMiOlsiT3JpZ2luSW5wdXQiLCJkZWZhdWx0UHJvcHMiLCJhc3NpZ24iLCJkaXNhYmxlZCIsInNpemUiLCJEZWZhdWx0IiwidHlwZSIsIlRleHQiLCJwcm9wVHlwZXMiLCJhZGRvbkFmdGVyIiwib25lT2ZUeXBlIiwic3RyaW5nIiwibm9kZSIsImFkZG9uQmVmb3JlIiwiZGVmYXVsdFZhbHVlIiwiYm9vbCIsImlkIiwicHJlZml4Iiwic3VmZml4IiwidmFsdWUiLCJvblByZXNzRW50ZXIiLCJmdW5jIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFDQTs7OztBQUNBOztBQUNBOzs7Ozs7SUFFcUJBLFc7Ozs7QUFBQUEsVyxDQUNaQyxZLEdBQWUsU0FBR0MsTUFBSCxDQUFVLEVBQVYsRUFBYztBQUNsQ0MsWUFBVSxLQUR3QjtBQUVsQ0MsUUFBTSxZQUFLQyxPQUZ1QjtBQUdsQ0MsUUFBTSxrQkFBV0M7QUFIaUIsQ0FBZCxFQUluQixnQkFBTU4sWUFKYSxFQUlDLEVBSkQsQztBQURIRCxXLENBTVpRLFMsR0FBWSxTQUFHTixNQUFILENBQVUsRUFBVixFQUFjO0FBQy9CO0FBQ0FPLGNBQVksb0JBQVVDLFNBQVYsQ0FBb0IsQ0FDOUIsb0JBQVVDLE1BRG9CLEVBRTlCLG9CQUFVQyxJQUZvQixDQUFwQixDQUZtQjtBQU0vQkMsZUFBYSxvQkFBVUgsU0FBVixDQUFvQixDQUMvQixvQkFBVUMsTUFEcUIsRUFFL0Isb0JBQVVDLElBRnFCLENBQXBCLENBTmtCO0FBVS9CRSxnQkFBYyxvQkFBVUgsTUFWTztBQVcvQlIsWUFBVSxvQkFBVVksSUFYVztBQVkvQkMsTUFBSSxvQkFBVUwsTUFaaUI7QUFhL0JNLFVBQVEsb0JBQVVQLFNBQVYsQ0FBb0IsQ0FDMUIsb0JBQVVDLE1BRGdCLEVBRTFCLG9CQUFVQyxJQUZnQixDQUFwQixDQWJ1QjtBQWlCL0JSLFFBQU0sb0JBQVVPLE1BakJlO0FBa0IvQk8sVUFBUSxvQkFBVVIsU0FBVixDQUFvQixDQUMxQixvQkFBVUMsTUFEZ0IsRUFFMUIsb0JBQVVDLElBRmdCLENBQXBCLENBbEJ1QjtBQXNCL0JOLFFBQU0sb0JBQVVLLE1BdEJlO0FBdUIvQlEsU0FBTyxvQkFBVVIsTUF2QmM7QUF3Qi9CUyxnQkFBYyxvQkFBVUM7QUF4Qk8sQ0FBZCxFQXlCaEIsZ0JBQU1iLFNBekJVLEVBeUJDLEVBekJELEM7a0JBTkFSLFciLCJmaWxlIjoiYW50ZC9pbnB1dC9PcmlnaW5JbnB1dC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0IH0gZnJvbSAnYW50ZCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgU0sgfSBmcm9tICdzay1qcyc7XG5pbXBvcnQgeyBJTlBVVF9UWVBFLCBTSVpFIH0gZnJvbSAnLi4vLi4vQ29uc3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPcmlnaW5JbnB1dCB7XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSBTSy5hc3NpZ24oe30sIHtcbiAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgc2l6ZTogU0laRS5EZWZhdWx0LFxuICAgIHR5cGU6IElOUFVUX1RZUEUuVGV4dCxcbiAgfSwgSW5wdXQuZGVmYXVsdFByb3BzLCB7fSk7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSBTSy5hc3NpZ24oe30sIHtcbiAgICAvL2h0dHBzOi8vYW50LmRlc2lnbi9jb21wb25lbnRzL2lucHV0LWNuLyNJbnB1dFxuICAgIGFkZG9uQWZ0ZXI6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgICAgUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgIFByb3BUeXBlcy5ub2RlLFxuICAgIF0pLFxuICAgIGFkZG9uQmVmb3JlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICBQcm9wVHlwZXMubm9kZSxcbiAgICBdKSxcbiAgICBkZWZhdWx0VmFsdWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIGlkOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHByZWZpeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgICBQcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgUHJvcFR5cGVzLm5vZGUsXG4gICAgXSksXG4gICAgc2l6ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzdWZmaXg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgICAgUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgIFByb3BUeXBlcy5ub2RlLFxuICAgIF0pLFxuICAgIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgb25QcmVzc0VudGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgfSwgSW5wdXQucHJvcFR5cGVzLCB7fSk7XG59XG4iXX0=